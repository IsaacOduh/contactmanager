{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layouts/Header.js","components/pages/About.js","components/layouts/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","Contacts","Fragment","contacts_Contact","Header","branding","href","defaultProps","About","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layouts_TextInputGroup","EditContact","updContact","match","params","put","NotFound","App","context_Provider","HashRouter","layouts_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2e242787.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n    switch(action.type) {\n        case 'DELETE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\n            };\n        case 'ADD_CONTACT':\n            return {\n                ...state,\n                contacts: [action.payload, \n                ...state.contacts]\n            };\n        case 'UPDATE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload): contact)\n            };\n        default:\n            return state;\n    }\n}\n\nexport class Provider extends Component {\n    state = {\n        contacts: [],\n        dispatch: action => {\n            this.setState(state => reducer(state, action))\n        }\n    };\n\n    async componentDidMount(){\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\n        this.setState({contacts: res.data});\n    }\n    \n    render() {\n        return (\n            <Context.Provider value={this.state}>\n                {this.props.children}\n            </Context.Provider>\n        )\n    }\n}\n\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Consumer } from '../../context';\nimport axios from 'axios';\n\n\nclass Contact extends Component {\n    state = {\n        showContactInfo: false\n    };\n\n    onShowClick = e => {\n        // !this.state.showContactInfo - set this to the opposite of the current state so if (true ) ==> false or if (false ) ==> true\n        this.setState({ showContactInfo: !this.state.showContactInfo });\n    };\n\n    onDeleteClick = async (id, dispatch) => {\n        try{\n            await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n            dispatch({ type: 'DELETE_CONTACT', payload: id });\n        }catch(e){\n            dispatch({ type: 'DELETE_CONTACT', payload: id });\n        }\n    }\n\n    render() {\n        const {id,name, email, phone} = this.props.contact;\n        const {showContactInfo } = this.state;\n\n        return (\n            <Consumer>\n                {value => {\n                    const {dispatch} = value;\n                    return (\n                        <div className=\"card card-body mb-3\">\n                            <h4>{name}{' '} \n                            <i onClick={this.onShowClick} className=\"fas fa-sort-down\" style={{cursor: 'pointer'}}/>\n                            <i className=\"fas fa-times\" style={{cursor: 'pointer', float: 'right', color: 'red'}} onClick={this.onDeleteClick.bind(this, id, dispatch)}/>\n                            <Link to={`contact/edit/${id}`}>\n                                <i className=\"fas fa-pencil-alt\"\n                                style={{\n                                    cursor:'pointer',\n                                    float: 'right',\n                                    color:'black',\n                                    marginRight:'1rem'\n                                }}\n                                >\n                                </i>\n                            </Link>\n                            </h4>\n                            {showContactInfo ? (\n                            <ul className=\"list-group\">\n                                <li className=\"list-group-item\">Email: {email}</li>\n                                <li className=\"list-group-item\">Phone: {phone}</li>\n                            </ul>\n                            ) : null}\n                        </div>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nContact.propTypes = {\n    contact: PropTypes.object.isRequired,\n\n};\n\nexport default Contact;\n","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport { Consumer } from '../../context';\n\nclass Contacts extends Component {\n    render() {\n        return (\n            <Consumer>\n                {value => {\n                    const { contacts } = value;\n                    return (\n                        <React.Fragment>\n                          <h1 className=\"display-4 mb-2\"><span className=\"text-danger\">Contact</span> List</h1>  \n                          { contacts.map(contact => (\n                              <Contact  key={contact.id} contact={contact} />\n                          )) }\n                        </React.Fragment>\n                      );\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default Contacts;","import React from 'react';\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\n\n\nconst Header = (props) => {\n  const {branding} = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n        <div className=\"container\">\n            <a href=\"/\" className=\"navbar-brand\">{branding}</a>\n            <div>\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item\">\n                        <Link to=\"/\" className=\"nav-link\"><i className=\"fas fa-home\"/> Home</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to=\"/contact/add\" className=\"nav-link\"><i className=\"fas fa-plus\"/> Add</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to=\"/about\" className=\"nav-link\"><i className=\"fas fa-question\"/> About</Link>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </nav>\n  );\n}\n\nHeader.defaultProps = {\n    branding: 'My App'\n};\n\nHeader.propTypes = {\n    branding: PropTypes.string.isRequired\n}\n\nexport default Header;\n","import React from 'react'\n\nexport default () =>  {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple App to Manage Contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\n\nconst TextInputGroup = ({label, name, value, placeholder, type, onChange,error}) =>  {\n  return (\n    <div className=\"form-group\">\n        <label htmlFor={name}>{label}</label>\n        <input\n            type={type}\n            name={name}\n            className={classnames('form-control form-control-lg',{\n                'is-invalid': error\n            })}\n            placeholder={placeholder}\n            value={value}\n            onChange={onChange}\n        />\n        {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n    label: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    error: PropTypes.string,\n};\n\nTextInputGroup.defaultProps = {\n    type: 'text'\n};\nexport default TextInputGroup;","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layouts/TextInputGroup';\n// import uuid from 'uuid';\nimport axios from 'axios';\n\nclass AddContact extends Component {\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    };\n\n    onSubmit = async (dispatch, e) => {\n        e.preventDefault();\n        const {name, email, phone } = this.state;\n\n        //Check for Errors\n        if(name === ''){\n            this.setState({errors: {name: 'Name is required..'}});\n            return;\n        }\n\n        if(email === ''){\n            this.setState({errors: {email: 'Email is required..'}});\n            return;\n        }\n\n        if(phone === ''){\n            this.setState({errors: {phone: 'Phone is required..'}});\n            return;\n        }\n        const newContact = {\n            name,\n            email,\n            phone,\n        };\n\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users',newContact);\n        dispatch({type: 'ADD_CONTACT', payload: res.data });\n\n        // Clear state when completed\n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        });\n\n        //redirect back to home\n        this.props.history.push('/');\n    }\n    onChange = e => this.setState({[e.target.name]: e.target.value });\n\n\n  render() {\n    const {name, email, phone, errors} = this.state;\n    return (\n        <Consumer>\n            {value => {\n                const { dispatch } = value;\n                return (\n                    <div className=\"card mb-3\">\n                        <div className=\"card-header\">Add Contact</div>\n                            <div className=\"card-body\">\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                                    <TextInputGroup \n                                        label=\"Name\"\n                                        name=\"name\"\n                                        placeholder=\"Enter Name...\"\n                                        value={name}\n                                        onChange={this.onChange}\n                                        error={errors.name}\n                                    />\n\n                                    <TextInputGroup \n                                        label=\"Email\"\n                                        name=\"email\"\n                                        type=\"email\"\n                                        placeholder=\"Enter Email...\"\n                                        value={email}\n                                        onChange={this.onChange}\n                                        error={errors.email}\n                                    />\n\n                                    <TextInputGroup \n                                        label=\"Phone\"\n                                        name=\"phone\"\n                                        type=\"phone\"\n                                        placeholder=\"Enter Phone\"\n                                        value={phone}\n                                        onChange={this.onChange}\n                                        error={errors.phone}\n                                    />\n                                    \n                                    <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-dark btn-block\" />  \n                                </form>\n                            </div>\n                        </div>\n                )\n            }}\n        </Consumer>\n    )\n  }\n}\nexport default AddContact;","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layouts/TextInputGroup';\n// import uuid from 'uuid';\nimport axios from 'axios';\n\nclass EditContact extends Component {\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    };\n\n    async componentDidMount(){\n        const {id} = this.props.match.params;\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n        const contact = res.data;\n\n        this.setState({\n            name: contact.name,\n            email: contact.email,\n            phone: contact.phone,\n        });\n\n\n    }\n\n    onSubmit = async (dispatch, e) => {\n        e.preventDefault();\n        const {name, email, phone } = this.state;\n\n        //Check for Errors\n        if(name === ''){\n            this.setState({errors: {name: 'Name is required..'}});\n            return;\n        }\n\n        if(email === ''){\n            this.setState({errors: {email: 'Email is required..'}});\n            return;\n        }\n\n        if(phone === ''){\n            this.setState({errors: {phone: 'Phone is required..'}});\n            return;\n        }\n        const updContact = {\n            name,\n            email,\n            phone,\n        };\n\n        const {id} = this.props.match.params;\n\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`,updContact);\n        dispatch({type: 'UPDATE_CONTACT', payload: res.data });\n\n        // Clear state when completed\n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        });\n\n        //redirect back to home\n        this.props.history.push('/');\n    }\n    onChange = e => this.setState({[e.target.name]: e.target.value });\n\n\n  render() {\n    const {name, email, phone, errors} = this.state;\n    return (\n        <Consumer>\n            {value => {\n                const { dispatch } = value;\n                return (\n                    <div className=\"card mb-3\">\n                        <div className=\"card-header\">Edit Contact</div>\n                            <div className=\"card-body\">\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                                    <TextInputGroup \n                                        label=\"Name\"\n                                        name=\"name\"\n                                        placeholder=\"Enter Name...\"\n                                        value={name}\n                                        onChange={this.onChange}\n                                        error={errors.name}\n                                    />\n\n                                    <TextInputGroup \n                                        label=\"Email\"\n                                        name=\"email\"\n                                        type=\"email\"\n                                        placeholder=\"Enter Email...\"\n                                        value={email}\n                                        onChange={this.onChange}\n                                        error={errors.email}\n                                    />\n\n                                    <TextInputGroup \n                                        label=\"Phone\"\n                                        name=\"phone\"\n                                        type=\"phone\"\n                                        placeholder=\"Enter Phone\"\n                                        value={phone}\n                                        onChange={this.onChange}\n                                        error={errors.phone}\n                                    />\n                                    \n                                    <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-dark btn-block\" />  \n                                </form>\n                            </div>\n                        </div>\n                )\n            }}\n        </Consumer>\n    )\n  }\n}\nexport default EditContact;","import React from 'react'\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found...</h1>\n      <p className=\"lead\">Sorry, that page does not exist.</p>\n    </div>\n  )\n}\n","import React, { Component } from 'react';\n// import {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layouts/Header';\nimport About from './components/pages/About';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\n\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport NotFound from './components/pages/NotFound';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\"/>\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route component={NotFound}/>\n              </Switch>\n              {/* <AddContact/>\n              <Contacts/> */}\n            </div>\n          </div>\n        </Router>\n      </Provider>\n      \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}